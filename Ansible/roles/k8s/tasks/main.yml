---
# tasks file for k8s
- name: Update apt cache if needed
  apt:
   update_cache: yes
   force_apt_get: yes
   cache_valid_time: 3600

- include_tasks: user.yml

- name: install packages
  apt:
   name: "{{ item }}"
   state: present
  with_items:
    - gnupg
    - ca-certificates
    - nfs-common
    - mysql-server
    - bridge-utils
    - lvm2

- name: Download docker signing key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: absent

- name: Add docker repo
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: absent
    filename: docker

- name: install docker packages
  apt:
   name: "{{ item }}"
   state: present
  with_items:
    - containerd

- name: create directories
  file:
   path: "{{ item }}"
   state: directory
  with_items:
   - "/opt/cni/bin/"

- name: download cni-plugins for containerd
  get_url:
   url: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
   dest: /home/kube/cni-plugins-linux-amd64.tar.gz
   owner: kube
   group: kube

- name: unarchive the cni-plugins file
  ansible.builtin.unarchive:
   src: /home/kube/cni-plugins-linux-amd64.tar.gz
   dest: /opt/cni/bin/
   remote_src: yes
   owner: root
   group: root
  notify: restart containerd

- name: Remove containerd config.toml file
  file:
    path: /etc/containerd/config.toml
    state: absent
  notify: restart containerd

#- name: configure docker
#  ansible.builtin.copy:
#    src: daemon.json
#    dest: /etc/docker/daemon.json
#    owner: root
#    group: root
#    mode: 0644
#  notify: restart containerd

- name: Ensure containerd is started and enabled
  service:
    name: containerd
    state: started
    enabled: yes

- name: Download k8s signing key
  ansible.builtin.apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add k8s repo
  ansible.builtin.apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes

- name: install k8s packages
  apt:
   name: "{{ item }}"
   state: present
   allow_downgrade: true
  with_items:
    - kubelet=1.25.3-00
    - kubeadm=1.25.3-00
    - kubectl=1.25.3-00
    - kubernetes-cni
  
- name: br_netfilter should be available
  modprobe:
   name: "{{ item }}"
   state: present
  with_items:
   - br_netfilter
   - overlay

- name: make bridge netfilter module permanent
  ansible.builtin.copy:
    src: bridge.conf
    dest: /etc/modules-load.d/bridge.conf
    owner: root
    group: root
    mode: 0644

- name: set ip forwarding to true
  sysctl:
   name: "{{ item }}"
   value: 1
   sysctl_set: yes
   state: present
   reload: yes
  with_items:
   - net.ipv4.ip_forward
   - net.bridge.bridge-nf-call-iptables
   - net.bridge.bridge-nf-call-ip6tables

- name: make sysctl module permanent
  ansible.builtin.copy:
    src: k8s-sysctl.conf
    dest: /etc/sysctl.d/k8-cri.conf
    owner: root
    group: root
    mode: 0644

#- name: configure network manager for calico (1/2)
#  file:
#    path: /etc/NetworkManager/conf.d/
#    state: directory
#    owner: root
#    group: root
#    mode: 0755
#
#- name: configure network manager for calico (2/2)
#  ansible.builtin.copy:
#    src: calico.conf
#    dest: /etc/NetworkManager/conf.d/calico.conf
#    owner: root
#    group: root
#    mode: 0644